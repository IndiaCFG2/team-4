{"ast":null,"code":"import { GridQuery } from './grid-query';\nimport { wrapTable, createTable } from '../common/utils';\n/**\n * @hidden\n */\n\nexport var exportElement = function (wrapper) {\n  var query = new GridQuery(wrapper);\n  var content = query.content();\n  var result;\n\n  if (content) {\n    var colGroups = [content.querySelector('colgroup')];\n    var headers = [query.header().querySelector('thead')];\n    var bodies = [content.querySelector('tbody')];\n    var footer = query.footer();\n    var footers = footer ? [footer.querySelector('tfoot')] : [];\n    result = createTable(colGroups, headers, bodies, footers);\n  } else {\n    result = wrapTable(query.table().cloneNode(true));\n  }\n\n  return result;\n};","map":{"version":3,"sources":["../../../src/grid/export-element.ts"],"names":[],"mappings":"AAAA,SAAS,SAAT,QAA0B,cAA1B;AACA,SAAS,SAAT,EAAoB,WAApB,QAAuC,iBAAvC;AAEA;;;;AAGA,OAAO,IAAM,aAAa,GAAG,UAAC,OAAD,EAAqB;AAC9C,MAAM,KAAK,GAAG,IAAI,SAAJ,CAAc,OAAd,CAAd;AACA,MAAM,OAAO,GAAG,KAAK,CAAC,OAAN,EAAhB;AACA,MAAI,MAAJ;;AAEA,MAAI,OAAJ,EAAa;AACT,QAAM,SAAS,GAAG,CAAC,OAAO,CAAC,aAAR,CAAsB,UAAtB,CAAD,CAAlB;AACA,QAAM,OAAO,GAAG,CAAC,KAAK,CAAC,MAAN,GAAe,aAAf,CAA6B,OAA7B,CAAD,CAAhB;AACA,QAAM,MAAM,GAAG,CAAC,OAAO,CAAC,aAAR,CAAsB,OAAtB,CAAD,CAAf;AACA,QAAM,MAAM,GAAG,KAAK,CAAC,MAAN,EAAf;AACA,QAAM,OAAO,GAAG,MAAM,GAAG,CAAC,MAAM,CAAC,aAAP,CAAqB,OAArB,CAAD,CAAH,GAAqC,EAA3D;AAEA,IAAA,MAAM,GAAG,WAAW,CAAC,SAAD,EAAY,OAAZ,EAAqB,MAArB,EAA6B,OAA7B,CAApB;AACH,GARD,MAQO;AACH,IAAA,MAAM,GAAG,SAAS,CAAC,KAAK,CAAC,KAAN,GAAc,SAAd,CAAwB,IAAxB,CAAD,CAAlB;AACH;;AAED,SAAO,MAAP;AACH,CAlBM","sourceRoot":"","sourcesContent":["import { GridQuery } from './grid-query';\nimport { wrapTable, createTable } from '../common/utils';\n/**\n * @hidden\n */\nexport var exportElement = function (wrapper) {\n    var query = new GridQuery(wrapper);\n    var content = query.content();\n    var result;\n    if (content) {\n        var colGroups = [content.querySelector('colgroup')];\n        var headers = [query.header().querySelector('thead')];\n        var bodies = [content.querySelector('tbody')];\n        var footer = query.footer();\n        var footers = footer ? [footer.querySelector('tfoot')] : [];\n        result = createTable(colGroups, headers, bodies, footers);\n    }\n    else {\n        result = wrapTable(query.table().cloneNode(true));\n    }\n    return result;\n};\n//# sourceMappingURL=export-element.js.map"]},"metadata":{},"sourceType":"module"}