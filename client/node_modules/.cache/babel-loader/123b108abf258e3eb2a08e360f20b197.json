{"ast":null,"code":"var arrayAggregator = require('./_arrayAggregator'),\n    baseAggregator = require('./_baseAggregator'),\n    baseIteratee = require('./_baseIteratee'),\n    isArray = require('./isArray');\n/**\r\n * Creates a function like `_.groupBy`.\r\n *\r\n * @private\r\n * @param {Function} setter The function to set accumulator values.\r\n * @param {Function} [initializer] The accumulator object initializer.\r\n * @returns {Function} Returns the new aggregator function.\r\n */\n\n\nfunction createAggregator(setter, initializer) {\n  return function (collection, iteratee) {\n    var func = isArray(collection) ? arrayAggregator : baseAggregator,\n        accumulator = initializer ? initializer() : {};\n    return func(collection, setter, baseIteratee(iteratee, 2), accumulator);\n  };\n}\n\nmodule.exports = createAggregator;","map":{"version":3,"sources":["C:/Users/nithya/Desktop/team-4/client/node_modules/lodash/_createAggregator.js"],"names":["arrayAggregator","require","baseAggregator","baseIteratee","isArray","createAggregator","setter","initializer","collection","iteratee","func","accumulator","module","exports"],"mappings":"AAAA,IAAIA,eAAe,GAAGC,OAAO,CAAC,oBAAD,CAA7B;AAAA,IACIC,cAAc,GAAGD,OAAO,CAAC,mBAAD,CAD5B;AAAA,IAEIE,YAAY,GAAGF,OAAO,CAAC,iBAAD,CAF1B;AAAA,IAGIG,OAAO,GAAGH,OAAO,CAAC,WAAD,CAHrB;AAKA;;;;;;;;;;AAQA,SAASI,gBAAT,CAA0BC,MAA1B,EAAkCC,WAAlC,EAA+C;AAC7C,SAAO,UAASC,UAAT,EAAqBC,QAArB,EAA+B;AACpC,QAAIC,IAAI,GAAGN,OAAO,CAACI,UAAD,CAAP,GAAsBR,eAAtB,GAAwCE,cAAnD;AAAA,QACIS,WAAW,GAAGJ,WAAW,GAAGA,WAAW,EAAd,GAAmB,EADhD;AAGA,WAAOG,IAAI,CAACF,UAAD,EAAaF,MAAb,EAAqBH,YAAY,CAACM,QAAD,EAAW,CAAX,CAAjC,EAAgDE,WAAhD,CAAX;AACD,GALD;AAMD;;AAEDC,MAAM,CAACC,OAAP,GAAiBR,gBAAjB","sourcesContent":["var arrayAggregator = require('./_arrayAggregator'),\r\n    baseAggregator = require('./_baseAggregator'),\r\n    baseIteratee = require('./_baseIteratee'),\r\n    isArray = require('./isArray');\r\n\r\n/**\r\n * Creates a function like `_.groupBy`.\r\n *\r\n * @private\r\n * @param {Function} setter The function to set accumulator values.\r\n * @param {Function} [initializer] The accumulator object initializer.\r\n * @returns {Function} Returns the new aggregator function.\r\n */\r\nfunction createAggregator(setter, initializer) {\r\n  return function(collection, iteratee) {\r\n    var func = isArray(collection) ? arrayAggregator : baseAggregator,\r\n        accumulator = initializer ? initializer() : {};\r\n\r\n    return func(collection, setter, baseIteratee(iteratee, 2), accumulator);\r\n  };\r\n}\r\n\r\nmodule.exports = createAggregator;\r\n"]},"metadata":{},"sourceType":"script"}