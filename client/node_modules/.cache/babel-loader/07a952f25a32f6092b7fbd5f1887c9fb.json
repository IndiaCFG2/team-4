{"ast":null,"code":"var baseAssignValue = require('./_baseAssignValue'),\n    createAggregator = require('./_createAggregator');\n/**\r\n * Creates an object composed of keys generated from the results of running\r\n * each element of `collection` thru `iteratee`. The corresponding value of\r\n * each key is the last element responsible for generating the key. The\r\n * iteratee is invoked with one argument: (value).\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.0.0\r\n * @category Collection\r\n * @param {Array|Object} collection The collection to iterate over.\r\n * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\r\n * @returns {Object} Returns the composed aggregate object.\r\n * @example\r\n *\r\n * var array = [\r\n *   { 'dir': 'left', 'code': 97 },\r\n *   { 'dir': 'right', 'code': 100 }\r\n * ];\r\n *\r\n * _.keyBy(array, function(o) {\r\n *   return String.fromCharCode(o.code);\r\n * });\r\n * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\r\n *\r\n * _.keyBy(array, 'dir');\r\n * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\r\n */\n\n\nvar keyBy = createAggregator(function (result, value, key) {\n  baseAssignValue(result, key, value);\n});\nmodule.exports = keyBy;","map":{"version":3,"sources":["C:/Users/nithya/Desktop/team-4/client/node_modules/lodash/keyBy.js"],"names":["baseAssignValue","require","createAggregator","keyBy","result","value","key","module","exports"],"mappings":"AAAA,IAAIA,eAAe,GAAGC,OAAO,CAAC,oBAAD,CAA7B;AAAA,IACIC,gBAAgB,GAAGD,OAAO,CAAC,qBAAD,CAD9B;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BA,IAAIE,KAAK,GAAGD,gBAAgB,CAAC,UAASE,MAAT,EAAiBC,KAAjB,EAAwBC,GAAxB,EAA6B;AACxDN,EAAAA,eAAe,CAACI,MAAD,EAASE,GAAT,EAAcD,KAAd,CAAf;AACD,CAF2B,CAA5B;AAIAE,MAAM,CAACC,OAAP,GAAiBL,KAAjB","sourcesContent":["var baseAssignValue = require('./_baseAssignValue'),\r\n    createAggregator = require('./_createAggregator');\r\n\r\n/**\r\n * Creates an object composed of keys generated from the results of running\r\n * each element of `collection` thru `iteratee`. The corresponding value of\r\n * each key is the last element responsible for generating the key. The\r\n * iteratee is invoked with one argument: (value).\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 4.0.0\r\n * @category Collection\r\n * @param {Array|Object} collection The collection to iterate over.\r\n * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\r\n * @returns {Object} Returns the composed aggregate object.\r\n * @example\r\n *\r\n * var array = [\r\n *   { 'dir': 'left', 'code': 97 },\r\n *   { 'dir': 'right', 'code': 100 }\r\n * ];\r\n *\r\n * _.keyBy(array, function(o) {\r\n *   return String.fromCharCode(o.code);\r\n * });\r\n * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\r\n *\r\n * _.keyBy(array, 'dir');\r\n * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\r\n */\r\nvar keyBy = createAggregator(function(result, value, key) {\r\n  baseAssignValue(result, key, value);\r\n});\r\n\r\nmodule.exports = keyBy;\r\n"]},"metadata":{},"sourceType":"script"}