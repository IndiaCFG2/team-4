{"ast":null,"code":"/**\r\n * A specialized version of `baseAggregator` for arrays.\r\n *\r\n * @private\r\n * @param {Array} [array] The array to iterate over.\r\n * @param {Function} setter The function to set `accumulator` values.\r\n * @param {Function} iteratee The iteratee to transform keys.\r\n * @param {Object} accumulator The initial aggregated object.\r\n * @returns {Function} Returns `accumulator`.\r\n */\nfunction arrayAggregator(array, setter, iteratee, accumulator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    var value = array[index];\n    setter(accumulator, value, iteratee(value), array);\n  }\n\n  return accumulator;\n}\n\nmodule.exports = arrayAggregator;","map":{"version":3,"sources":["C:/Users/nithya/Desktop/team-4/client/node_modules/lodash/_arrayAggregator.js"],"names":["arrayAggregator","array","setter","iteratee","accumulator","index","length","value","module","exports"],"mappings":"AAAA;;;;;;;;;;AAUA,SAASA,eAAT,CAAyBC,KAAzB,EAAgCC,MAAhC,EAAwCC,QAAxC,EAAkDC,WAAlD,EAA+D;AAC7D,MAAIC,KAAK,GAAG,CAAC,CAAb;AAAA,MACIC,MAAM,GAAGL,KAAK,IAAI,IAAT,GAAgB,CAAhB,GAAoBA,KAAK,CAACK,MADvC;;AAGA,SAAO,EAAED,KAAF,GAAUC,MAAjB,EAAyB;AACvB,QAAIC,KAAK,GAAGN,KAAK,CAACI,KAAD,CAAjB;AACAH,IAAAA,MAAM,CAACE,WAAD,EAAcG,KAAd,EAAqBJ,QAAQ,CAACI,KAAD,CAA7B,EAAsCN,KAAtC,CAAN;AACD;;AACD,SAAOG,WAAP;AACD;;AAEDI,MAAM,CAACC,OAAP,GAAiBT,eAAjB","sourcesContent":["/**\r\n * A specialized version of `baseAggregator` for arrays.\r\n *\r\n * @private\r\n * @param {Array} [array] The array to iterate over.\r\n * @param {Function} setter The function to set `accumulator` values.\r\n * @param {Function} iteratee The iteratee to transform keys.\r\n * @param {Object} accumulator The initial aggregated object.\r\n * @returns {Function} Returns `accumulator`.\r\n */\r\nfunction arrayAggregator(array, setter, iteratee, accumulator) {\r\n  var index = -1,\r\n      length = array == null ? 0 : array.length;\r\n\r\n  while (++index < length) {\r\n    var value = array[index];\r\n    setter(accumulator, value, iteratee(value), array);\r\n  }\r\n  return accumulator;\r\n}\r\n\r\nmodule.exports = arrayAggregator;\r\n"]},"metadata":{},"sourceType":"script"}