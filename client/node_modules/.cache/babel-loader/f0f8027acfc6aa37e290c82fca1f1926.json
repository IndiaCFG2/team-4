{"ast":null,"code":"import { GridQuery } from '../common/table-query';\nimport { wrapTable, createTable } from '../common/utils';\n/**\n * @hidden\n */\n\nexport var exportElement = function (wrapper) {\n  var query = new GridQuery(wrapper);\n  var content = query.content();\n  var result;\n  var headerWithoutFilter = query.header();\n\n  if (headerWithoutFilter.childNodes.length > 1) {\n    headerWithoutFilter.removeChild(headerWithoutFilter.childNodes[1]);\n  }\n\n  headerWithoutFilter.childNodes[0].childNodes.forEach(function (headerCell) {\n    return headerCell.style.top = 0;\n  });\n\n  if (content) {\n    var colGroups = [content.querySelector('colgroup')];\n    var headers = [headerWithoutFilter];\n    var bodies = [content.querySelector('tbody')];\n    var footer = query.footer();\n    var footers = footer ? [footer.querySelector('tfoot')] : [];\n    result = createTable(colGroups, headers, bodies, footers);\n  } else {\n    result = wrapTable(query.table().cloneNode(true));\n  }\n\n  return result;\n};","map":{"version":3,"sources":["../../../src/treelist/export-element.ts"],"names":[],"mappings":"AAAA,SAAS,SAAT,QAA0B,uBAA1B;AACA,SAAS,SAAT,EAAoB,WAApB,QAAuC,iBAAvC;AAEA;;;;AAGA,OAAO,IAAM,aAAa,GAAG,UAAC,OAAD,EAAqB;AAC9C,MAAM,KAAK,GAAG,IAAI,SAAJ,CAAc,OAAd,CAAd;AACA,MAAM,OAAO,GAAG,KAAK,CAAC,OAAN,EAAhB;AACA,MAAI,MAAJ;AACA,MAAI,mBAAmB,GAAG,KAAK,CAAC,MAAN,EAA1B;;AACA,MAAI,mBAAmB,CAAC,UAApB,CAA+B,MAA/B,GAAwC,CAA5C,EAA+C;AAC3C,IAAA,mBAAmB,CAAC,WAApB,CAAgC,mBAAmB,CAAC,UAApB,CAA+B,CAA/B,CAAhC;AACH;;AACD,EAAA,mBAAmB,CAAC,UAApB,CAA+B,CAA/B,EAAkC,UAAlC,CAA6C,OAA7C,CAAqD,UAAA,UAAA,EAAU;AAAI,WAAC,UAAkB,CAAC,KAAnB,CAAyB,GAAzB,GAAD,CAAA;AAAiC,GAApG;;AACA,MAAI,OAAJ,EAAa;AACT,QAAM,SAAS,GAAG,CAAC,OAAO,CAAC,aAAR,CAAsB,UAAtB,CAAD,CAAlB;AACA,QAAM,OAAO,GAAG,CAAC,mBAAD,CAAhB;AACA,QAAM,MAAM,GAAG,CAAC,OAAO,CAAC,aAAR,CAAsB,OAAtB,CAAD,CAAf;AACA,QAAM,MAAM,GAAG,KAAK,CAAC,MAAN,EAAf;AACA,QAAM,OAAO,GAAG,MAAM,GAAG,CAAC,MAAM,CAAC,aAAP,CAAqB,OAArB,CAAD,CAAH,GAAqC,EAA3D;AACA,IAAA,MAAM,GAAG,WAAW,CAAC,SAAD,EAAY,OAAZ,EAAqB,MAArB,EAA6B,OAA7B,CAApB;AACH,GAPD,MAOO;AACH,IAAA,MAAM,GAAG,SAAS,CAAC,KAAK,CAAC,KAAN,GAAc,SAAd,CAAwB,IAAxB,CAAD,CAAlB;AACH;;AACD,SAAO,MAAP;AACH,CApBM","sourceRoot":"","sourcesContent":["import { GridQuery } from '../common/table-query';\nimport { wrapTable, createTable } from '../common/utils';\n/**\n * @hidden\n */\nexport var exportElement = function (wrapper) {\n    var query = new GridQuery(wrapper);\n    var content = query.content();\n    var result;\n    var headerWithoutFilter = query.header();\n    if (headerWithoutFilter.childNodes.length > 1) {\n        headerWithoutFilter.removeChild(headerWithoutFilter.childNodes[1]);\n    }\n    headerWithoutFilter.childNodes[0].childNodes.forEach(function (headerCell) { return headerCell.style.top = 0; });\n    if (content) {\n        var colGroups = [content.querySelector('colgroup')];\n        var headers = [headerWithoutFilter];\n        var bodies = [content.querySelector('tbody')];\n        var footer = query.footer();\n        var footers = footer ? [footer.querySelector('tfoot')] : [];\n        result = createTable(colGroups, headers, bodies, footers);\n    }\n    else {\n        result = wrapTable(query.table().cloneNode(true));\n    }\n    return result;\n};\n//# sourceMappingURL=export-element.js.map"]},"metadata":{},"sourceType":"module"}