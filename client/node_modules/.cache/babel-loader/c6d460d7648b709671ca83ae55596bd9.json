{"ast":null,"code":"/*!\r\n * unpipe\r\n * Copyright(c) 2015 Douglas Christopher Wilson\r\n * MIT Licensed\r\n */\n'use strict';\n/**\r\n * Module exports.\r\n * @public\r\n */\n\nmodule.exports = unpipe;\n/**\r\n * Determine if there are Node.js pipe-like data listeners.\r\n * @private\r\n */\n\nfunction hasPipeDataListeners(stream) {\n  var listeners = stream.listeners('data');\n\n  for (var i = 0; i < listeners.length; i++) {\n    if (listeners[i].name === 'ondata') {\n      return true;\n    }\n  }\n\n  return false;\n}\n/**\r\n * Unpipe a stream from all destinations.\r\n *\r\n * @param {object} stream\r\n * @public\r\n */\n\n\nfunction unpipe(stream) {\n  if (!stream) {\n    throw new TypeError('argument stream is required');\n  }\n\n  if (typeof stream.unpipe === 'function') {\n    // new-style\n    stream.unpipe();\n    return;\n  } // Node.js 0.8 hack\n\n\n  if (!hasPipeDataListeners(stream)) {\n    return;\n  }\n\n  var listener;\n  var listeners = stream.listeners('close');\n\n  for (var i = 0; i < listeners.length; i++) {\n    listener = listeners[i];\n\n    if (listener.name !== 'cleanup' && listener.name !== 'onclose') {\n      continue;\n    } // invoke the listener\n\n\n    listener.call(stream);\n  }\n}","map":{"version":3,"sources":["C:/Users/nithya/Desktop/team-4/client/node_modules/unpipe/index.js"],"names":["module","exports","unpipe","hasPipeDataListeners","stream","listeners","i","length","name","TypeError","listener","call"],"mappings":"AAAA;;;;;AAMA;AAEA;;;;;AAKAA,MAAM,CAACC,OAAP,GAAiBC,MAAjB;AAEA;;;;;AAKA,SAASC,oBAAT,CAA8BC,MAA9B,EAAsC;AACpC,MAAIC,SAAS,GAAGD,MAAM,CAACC,SAAP,CAAiB,MAAjB,CAAhB;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,SAAS,CAACE,MAA9B,EAAsCD,CAAC,EAAvC,EAA2C;AACzC,QAAID,SAAS,CAACC,CAAD,CAAT,CAAaE,IAAb,KAAsB,QAA1B,EAAoC;AAClC,aAAO,IAAP;AACD;AACF;;AAED,SAAO,KAAP;AACD;AAED;;;;;;;;AAOA,SAASN,MAAT,CAAgBE,MAAhB,EAAwB;AACtB,MAAI,CAACA,MAAL,EAAa;AACX,UAAM,IAAIK,SAAJ,CAAc,6BAAd,CAAN;AACD;;AAED,MAAI,OAAOL,MAAM,CAACF,MAAd,KAAyB,UAA7B,EAAyC;AACvC;AACAE,IAAAA,MAAM,CAACF,MAAP;AACA;AACD,GATqB,CAWtB;;;AACA,MAAI,CAACC,oBAAoB,CAACC,MAAD,CAAzB,EAAmC;AACjC;AACD;;AAED,MAAIM,QAAJ;AACA,MAAIL,SAAS,GAAGD,MAAM,CAACC,SAAP,CAAiB,OAAjB,CAAhB;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,SAAS,CAACE,MAA9B,EAAsCD,CAAC,EAAvC,EAA2C;AACzCI,IAAAA,QAAQ,GAAGL,SAAS,CAACC,CAAD,CAApB;;AAEA,QAAII,QAAQ,CAACF,IAAT,KAAkB,SAAlB,IAA+BE,QAAQ,CAACF,IAAT,KAAkB,SAArD,EAAgE;AAC9D;AACD,KALwC,CAOzC;;;AACAE,IAAAA,QAAQ,CAACC,IAAT,CAAcP,MAAd;AACD;AACF","sourcesContent":["/*!\r\n * unpipe\r\n * Copyright(c) 2015 Douglas Christopher Wilson\r\n * MIT Licensed\r\n */\r\n\r\n'use strict'\r\n\r\n/**\r\n * Module exports.\r\n * @public\r\n */\r\n\r\nmodule.exports = unpipe\r\n\r\n/**\r\n * Determine if there are Node.js pipe-like data listeners.\r\n * @private\r\n */\r\n\r\nfunction hasPipeDataListeners(stream) {\r\n  var listeners = stream.listeners('data')\r\n\r\n  for (var i = 0; i < listeners.length; i++) {\r\n    if (listeners[i].name === 'ondata') {\r\n      return true\r\n    }\r\n  }\r\n\r\n  return false\r\n}\r\n\r\n/**\r\n * Unpipe a stream from all destinations.\r\n *\r\n * @param {object} stream\r\n * @public\r\n */\r\n\r\nfunction unpipe(stream) {\r\n  if (!stream) {\r\n    throw new TypeError('argument stream is required')\r\n  }\r\n\r\n  if (typeof stream.unpipe === 'function') {\r\n    // new-style\r\n    stream.unpipe()\r\n    return\r\n  }\r\n\r\n  // Node.js 0.8 hack\r\n  if (!hasPipeDataListeners(stream)) {\r\n    return\r\n  }\r\n\r\n  var listener\r\n  var listeners = stream.listeners('close')\r\n\r\n  for (var i = 0; i < listeners.length; i++) {\r\n    listener = listeners[i]\r\n\r\n    if (listener.name !== 'cleanup' && listener.name !== 'onclose') {\r\n      continue\r\n    }\r\n\r\n    // invoke the listener\r\n    listener.call(stream)\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"script"}