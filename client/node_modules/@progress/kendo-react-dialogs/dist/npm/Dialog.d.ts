import * as React from 'react';
import * as PropTypes from 'prop-types';
import { DialogCloseEvent } from './events';
/**
 * Represents the props of the [KendoReact Dialog component]({% slug overview_dialog %}).
 */
export interface DialogProps {
    /**
     * Focus the Dialog container automatically when mounted. By default the autoFocus is false.
     */
    autoFocus?: boolean;
    /**
     * Sets the title of the Dialog ([see example]({% slug title_dialog %})). If `title` is not specified, the Dialog does not render a **Close** button.
     */
    title?: string | React.ReactElement<any>;
    /**
     * Sets a class of the Dialog DOM element.
     */
    className?: string;
    /**
     * Specifies whether a close button should be rendered at the top corner of the dialog.
     */
    closeIcon?: boolean;
    /**
     * Specifies the width of the Dialog ([see example]({% slug dimensions_dialog %})).
     */
    width?: number | string;
    /**
     * Specifies the height of the Dialog ([see example]({% slug dimensions_dialog %})).
     */
    height?: number | string;
    /**
     * Specifies the minimum width of the Dialog.
     */
    minWidth?: number | string;
    /**
     * Fires when the **Close** button in the title is clicked or when the `Esc` button is pressed.
     */
    onClose?: (event: DialogCloseEvent) => void;
    /**
     * @hidden
     */
    children?: React.ReactNode;
    /**
     * Sets the `aria-labelledby` value.
     */
    id?: string;
    /**
     * Represents the `dir` HTML attribute.
     */
    dir?: string;
    /**
     * The styles that are applied to the Dialog.
     */
    style?: React.CSSProperties;
    /**
     * The styles that are applied to the content of the Dialog.
     */
    contentStyle?: React.CSSProperties;
}
export declare class Dialog extends React.Component<DialogProps> {
    /**
     * @hidden
     */
    static propTypes: {
        title: PropTypes.Requireable<any>;
        id: PropTypes.Requireable<string>;
        dir: PropTypes.Requireable<string>;
        style: PropTypes.Requireable<object>;
        closeIcon: PropTypes.Requireable<boolean>;
        width: PropTypes.Requireable<string | number>;
        height: PropTypes.Requireable<string | number>;
        minWidth: PropTypes.Requireable<string | number>;
        autoFocus: PropTypes.Requireable<boolean>;
    };
    /**
     * @hidden
     */
    static defaultProps: {
        autoFocus: boolean;
    };
    /**
     * @hidden
     */
    DialogRef: React.RefObject<HTMLDivElement>;
    private titleId;
    /**
     * @hidden
     */
    componentDidMount(): void;
    /**
     * @hidden
     */
    render(): JSX.Element;
    private handleCloseDialog;
    private handleKeyDown;
    private getActionBar;
    private getContent;
    private generateTitleId;
}
