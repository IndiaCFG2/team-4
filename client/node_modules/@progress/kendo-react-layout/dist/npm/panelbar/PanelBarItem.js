"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var PropTypes = require("prop-types");
var kendo_react_common_1 = require("@progress/kendo-react-common");
var kendo_react_animation_1 = require("@progress/kendo-react-animation");
/**
 * @hidden
 */
function iconElement(_a) {
    var imageUrl = _a.imageUrl, icon = _a.icon, iconClass = _a.iconClass;
    if (imageUrl) {
        return (React.createElement("img", { role: "presentation", className: 'k-image', src: imageUrl }));
    }
    else if (icon) {
        var iconClasses = kendo_react_common_1.classNames('k-icon', 'k-i-' + icon);
        return (React.createElement("span", { role: "presentation", className: iconClasses }));
    }
    else if (iconClass) {
        return (React.createElement("span", { role: "presentation", className: iconClass }));
    }
    return null;
}
// tslint:enable:max-line-length
var PanelBarItem = /** @class */ (function (_super) {
    __extends(PanelBarItem, _super);
    function PanelBarItem() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.handleItemClick = function () {
            var _a = _this.props, onSelect = _a.onSelect, disabled = _a.disabled, id = _a.id;
            if (onSelect && !disabled) {
                onSelect.call(undefined, {
                    uniquePrivateKey: _this.props.uniquePrivateKey,
                    id: id,
                    target: _this
                });
            }
        };
        return _this;
    }
    /**
     * @hidden
     */
    PanelBarItem.prototype.render = function () {
        var _a;
        var _b = this.props, id = _b.id, children = _b.children, title = _b.title, uniquePrivateKey = _b.uniquePrivateKey, disabled = _b.disabled, selected = _b.selected, focused = _b.focused, expanded = _b.expanded, className = _b.className, root = _b.root, headerClassName = _b.headerClassName, animation = _b.animation;
        var panelBarItemAriaAttributes = {
            'role': 'treeitem',
            'aria-disabled': disabled,
            'aria-hidden': !disabled && !expanded,
            'aria-selected': !disabled && selected,
            'aria-expanded': !disabled && expanded && !!children
        };
        var panelBarItemClassName = kendo_react_common_1.classNames({
            'k-item': true,
            'k-state-default': !disabled,
            'k-state-expanded': expanded && !!children,
            'k-state-disabled': disabled
        }, className);
        var panelBarHeaderClassName = kendo_react_common_1.classNames({
            'k-link': true,
            'k-header': root,
            'k-state-selected': !disabled && selected,
            'k-state-focused': !disabled && focused
        }, headerClassName);
        var panelBarItemArrowClassName = kendo_react_common_1.classNames((_a = {},
            _a['k-icon'] = true,
            _a['k-i-arrow-n'] = expanded && !!children,
            _a['k-panelbar-collapse'] = expanded && !!children,
            _a['k-i-arrow-s'] = !expanded && !!children,
            _a['k-panelbar-expand'] = !expanded && !!children,
            _a));
        var animationStyle = { display: 'block' };
        var icon = iconElement(this.props);
        var arrow = (!disabled && children) ? React.createElement("span", { className: panelBarItemArrowClassName }) : null;
        var content = (!disabled && expanded) ?
            (React.createElement("div", { role: "group", className: "k-panel k-group" }, children))
            : null;
        var child = ((animation !== undefined ? animation : true) && !disabled && children) ?
            (React.createElement(kendo_react_animation_1.Reveal, { transitionEnterDuration: 200, transitionExitDuration: 200, key: uniquePrivateKey + '_animation', style: animationStyle, children: content }))
            : content;
        return (React.createElement("div", __assign({ id: id, className: panelBarItemClassName }, panelBarItemAriaAttributes),
            React.createElement("span", { className: panelBarHeaderClassName, onClick: this.handleItemClick },
                icon,
                title,
                arrow),
            child));
    };
    /**
     * @hidden
     */
    PanelBarItem.propTypes = {
        animation: PropTypes.bool,
        children: PropTypes.any,
        className: PropTypes.string,
        expanded: PropTypes.bool,
        disabled: PropTypes.bool,
        onSelect: PropTypes.func,
        selected: PropTypes.bool,
        root: PropTypes.bool,
        title: PropTypes.oneOfType([
            PropTypes.string,
            PropTypes.element
        ]),
        id: PropTypes.oneOfType([
            PropTypes.string,
            PropTypes.number
        ]),
        focused: PropTypes.bool
    };
    /**
     * @hidden
     */
    PanelBarItem.defaultProps = {
        title: 'Untitled'
    };
    return PanelBarItem;
}(React.PureComponent));
exports.default = PanelBarItem;
//# sourceMappingURL=PanelBarItem.js.map