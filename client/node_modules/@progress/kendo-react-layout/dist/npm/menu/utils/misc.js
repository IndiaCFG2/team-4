"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var consts_1 = require("../consts");
var itemsIdsUtils_1 = require("./itemsIdsUtils");
/**
 * @hidden
 */
function getPopupSettings(itemId, isMenuVertical, isDirectionRightToLeft) {
    var childrenPosition = getChildrenPosition(itemId, isMenuVertical, isDirectionRightToLeft);
    if (isDirectionRightToLeft) {
        return childrenPosition === 'downward' ? consts_1.POPUP_SETTINGS_RTL.downward : consts_1.POPUP_SETTINGS_RTL.leftward;
    }
    else {
        return childrenPosition === 'downward' ? consts_1.POPUP_SETTINGS.downward : consts_1.POPUP_SETTINGS.rightward;
    }
}
exports.getPopupSettings = getPopupSettings;
/**
 * @hidden
 */
function getChildrenPosition(itemId, isMenuVertical, isDirectionRightToLeft) {
    if (itemsIdsUtils_1.isIdZeroLevel(itemId)) {
        if (isMenuVertical) {
            return isDirectionRightToLeft ? 'leftward' : 'rightward';
        }
        else {
            return 'downward';
        }
    }
    else {
        return isDirectionRightToLeft ? 'leftward' : 'rightward';
    }
}
exports.getChildrenPosition = getChildrenPosition;
/**
 * @hidden
 */
function convertBoolDirectionToString(isDirectionRightToLeft) {
    return isDirectionRightToLeft ? 'rtl' : 'ltr';
}
exports.convertBoolDirectionToString = convertBoolDirectionToString;
/**
 * @hidden
 */
function getDOMElementId(menuGuid, itemId) {
    return menuGuid + "_" + itemId;
}
exports.getDOMElementId = getDOMElementId;
//# sourceMappingURL=misc.js.map