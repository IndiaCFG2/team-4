"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var PropTypes = require("prop-types");
var TabStripNavigationItem_1 = require("./TabStripNavigationItem");
var kendo_react_common_1 = require("@progress/kendo-react-common");
/**
 * @hidden
 */
var times = function (count) { return Array.apply(null, Array(count)); };
var TabStripNavigation = /** @class */ (function (_super) {
    __extends(TabStripNavigation, _super);
    function TabStripNavigation() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     * @hidden
     */
    TabStripNavigation.prototype.render = function () {
        var _a = this.props, selected = _a.selected, children = _a.children, onSelect = _a.onSelect, onKeyDown = _a.onKeyDown;
        var tabsCount = React.Children.count(children);
        var childElements = React.Children.toArray(children);
        var tabs;
        if (children) {
            tabs = times(tabsCount)
                .map(function (_, index, array) { return ({
                first: index === 0,
                last: index === array.length - 1
            }); })
                .map(function (_, index) {
                var tabProps = {
                    active: selected === index,
                    disabled: childElements[index].props.disabled,
                    index: index,
                    title: childElements[index].props.title,
                    onSelect: onSelect
                };
                return (React.createElement(TabStripNavigationItem_1.default, __assign({ key: index }, tabProps)));
            });
        }
        var navClasses = kendo_react_common_1.classNames('k-tabstrip-items', 'k-reset');
        return (React.createElement("ul", { className: navClasses, role: 'tablist', tabIndex: this.props.tabIndex, onKeyDown: onKeyDown }, tabs));
    };
    /**
     * @hidden
     */
    TabStripNavigation.propTypes = {
        children: PropTypes.oneOfType([
            PropTypes.element,
            PropTypes.arrayOf(PropTypes.element)
        ]),
        onSelect: PropTypes.func,
        onKeyDown: PropTypes.func,
        selected: PropTypes.number,
        tabIndex: PropTypes.number
    };
    return TabStripNavigation;
}(React.Component));
exports.default = TabStripNavigation;
//# sourceMappingURL=TabStripNavigation.js.map