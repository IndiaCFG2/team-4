var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
import * as React from 'react';
import * as PropTypes from 'prop-types';
import { classNames } from '@progress/kendo-react-common';
import { getChildrenPosition } from '../utils/misc';
/**
 * @hidden
 */
export var downArrowClass = 'k-i-arrow-60-down';
/**
 * @hidden
 */
export var rightArrowClass = 'k-i-arrow-60-right';
/**
 * @hidden
 */
export var leftArrowClass = 'k-i-arrow-60-left';
var MenuItemArrow = /** @class */ (function (_super) {
    __extends(MenuItemArrow, _super);
    function MenuItemArrow() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     * @hidden
     */
    MenuItemArrow.prototype.render = function () {
        return React.createElement("span", { className: this.getArrowClassName(), role: "presentation" });
    };
    MenuItemArrow.prototype.getArrowClassName = function () {
        var _a;
        var childrenPosition = getChildrenPosition(this.props.itemId, this.props.verticalMenu === true, this.props.dir === 'rtl');
        return classNames('k-icon', 'k-menu-expand-arrow', (_a = {},
            _a[downArrowClass] = childrenPosition === 'downward',
            _a[rightArrowClass] = childrenPosition === 'rightward',
            _a[leftArrowClass] = childrenPosition === 'leftward',
            _a));
    };
    /**
     * @hidden
     */
    MenuItemArrow.propTypes = {
        itemId: PropTypes.string,
        dir: PropTypes.string,
        verticalMenu: PropTypes.bool
    };
    return MenuItemArrow;
}(React.Component));
export default MenuItemArrow;
//# sourceMappingURL=MenuItemArrow.js.map