var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import * as React from 'react';
import * as PropTypes from 'prop-types';
import { classNames } from '@progress/kendo-react-common';
var TabStripNavigationItem = /** @class */ (function (_super) {
    __extends(TabStripNavigationItem, _super);
    function TabStripNavigationItem() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.onClick = function () {
            if (_this.props.onSelect) {
                _this.props.onSelect(_this.props.index);
            }
        };
        return _this;
    }
    /**
     * @hidden
     */
    TabStripNavigationItem.prototype.render = function () {
        var _a;
        var _b = this.props, active = _b.active, disabled = _b.disabled, _c = _b.title, title = _c === void 0 ? 'Untitled' : _c;
        var props = {
            'aria-selected': active,
            'role': 'tab',
            onClick: !disabled ? this.onClick : undefined
        };
        var itemClasses = classNames((_a = {},
            _a['k-item'] = true,
            _a['k-state-default'] = !(disabled || active),
            _a['k-state-disabled'] = disabled,
            _a['k-state-active'] = active,
            _a['k-tab-on-top'] = active,
            _a));
        return (React.createElement("li", __assign({}, props, { className: itemClasses }),
            React.createElement("span", { className: "k-link" }, title)));
    };
    /**
     * @hidden
     */
    TabStripNavigationItem.propTypes = {
        active: PropTypes.bool,
        disabled: PropTypes.bool,
        index: PropTypes.number,
        onSelect: PropTypes.func,
        title: PropTypes.oneOfType([
            PropTypes.string,
            PropTypes.element
        ])
    };
    return TabStripNavigationItem;
}(React.Component));
export default TabStripNavigationItem;
//# sourceMappingURL=TabStripNavigationItem.js.map