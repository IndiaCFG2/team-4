import { Group } from '@progress/kendo-drawing';
import { ChartAxisType, ChartPaneType } from './../common/api-types';
import { Charts } from './../common/charts';
/**
 * Returns the axis with the specified name.
 *
 * @param {Chart} chartComponent - The instance of the KendoReact Chart component.
 * @param {string} name - The axis name.
 * @returns {ChartAxis} - The axis with a corresponding name.
 */
declare const findAxisByName: (chartComponent: Charts, name: string) => ChartAxisType;
/**
 * Returns the pane at the specified index.
 *
 * @param {Chart} chartComponent - The instance of the KendoReact Chart component.
 * @param {number} index - The pane index.
 * @returns {ChartPane} - The pane at the specified index.
 */
declare const findPaneByIndex: (chartComponent: Charts, index: number) => ChartPaneType;
/**
 * Returns the pane with the specified name.
 *
 * @param {Chart} chartComponent - The instance of the KendoReact Chart component.
 * @param {string} name - The name of the pane.
 * @returns {ChartPane} - The pane with the provided name.
 */
declare const findPaneByName: (chartComponent: Charts, name: string) => ChartPaneType;
/**
 * Exports a Chart component as a Drawing `Scene`.
 *
 * @param {Chart} chartComponent - The instance of the KendoReact Chart component.
 * @param {any} options - The parameters for the export operation.
 * @returns {Group} - The root Group of the scene.
 */
declare const exportVisual: (chartComponent: Charts, options?: any) => Group;
export { findAxisByName, findPaneByIndex, findPaneByName, exportVisual };
