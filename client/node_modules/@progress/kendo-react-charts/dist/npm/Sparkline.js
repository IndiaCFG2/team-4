"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)
            t[p[i]] = s[p[i]];
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var BaseChart_1 = require("./BaseChart");
var kendo_charts_1 = require("@progress/kendo-charts");
/**
 * The root Sparkline component.
 *
 * @example
 * ```jsx
 * import {
 *     Sparkline,
 *     ChartValueAxis,
 *     ChartValueAxisItem
 * } from '@progress/kendo-react-charts';
 *
 * const sparklineData = [ 936, 968, 1025, 999, 998, 1014, 1017, 1010, 1010, 1007 ];
 * const bulletData = [ 21, 23 ];
 * const bulletValueAxis = {
 *     min: 0,
 *     max: 30,
 *     plotBands: [{
 *         from: 0, to: 15, color: '#787878', opacity: 0.15
 *     }, {
 *         from: 15, to: 22, color: '#787878', opacity: 0.3
 *     }, {
 *         from: 22, to: 30, color: '#787878', opacity: 0.15
 *     }]
 * };
 *
 * const SparklineContainer = () => (
 *      <ul>
 *        <li>
 *            Base Sparkline chart
 *            <Sparkline data={sparklineData} />
 *        </li>
 *        <li>
 *            Bar/Column type Sparkline chart
 *            <Sparkline data={sparklineData} type="column" />
 *        </li>
 *        <li>
 *            Area type Sparkline chart
 *            <Sparkline data={sparklineData} type="area" />
 *        </li>
 *        <li>
 *            Pie type Sparkline chart
 *            <Sparkline data={sparklineData} type="pie" />
 *        </li>
 *        <li>
 *            Bullet type Sparkline chart
 *            <Sparkline data={bulletData} type="bullet">
 *                <ChartValueAxis>
 *                    <ChartValueAxisItem {...bulletValueAxis} />
 *                </ChartValueAxis>
 *            </Sparkline>
 *        </li>
 *      </ul>
 * );
 *
 * ReactDOM.render(
 *     <SparklineContainer />,
 *     document.querySelector('my-app')
 * );
 * ```
 */
var Sparkline = /** @class */ (function (_super) {
    __extends(Sparkline, _super);
    function Sparkline() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        /**
         * @hidden
         */
        _this.deriveOptionsFromParent = function (options) {
            var _a = _this.props, type = _a.type, data = _a.data;
            var sparklineOptions = Object.assign({}, options, { type: type, data: data });
            return kendo_charts_1.Sparkline.normalizeOptions(sparklineOptions);
        };
        _this.getTarget = function () {
            return _this;
        };
        return _this;
    }
    Object.defineProperty(Sparkline.prototype, "chartInstance", {
        /**
         * @hidden
         */
        get: function () {
            if (this._baseChart !== null) {
                return this._baseChart.chartInstance;
            }
            return null;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Sparkline.prototype, "surface", {
        /**
         * The Drawing `Surface` of the Sparkline.
         */
        get: function () {
            if (this._baseChart !== null) {
                return this._baseChart.surface;
            }
            return null;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Sparkline.prototype, "element", {
        /**
         * The DOM element of the Sparkline.
         */
        get: function () {
            if (this._baseChart !== null) {
                return this._baseChart.element;
            }
            return null;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @hidden
     */
    Sparkline.prototype.render = function () {
        var _this = this;
        var _a = this.props, children = _a.children, type = _a.type, baseChartProps = __rest(_a, ["children", "type"]);
        return (React.createElement(BaseChart_1.BaseChart, __assign({}, baseChartProps, { ref: function (baseChart) { return _this._baseChart = baseChart; }, chartConstructor: kendo_charts_1.Sparkline, getTarget: this.getTarget, wrapper: "span", deriveOptionsFromParent: this.deriveOptionsFromParent, wrapperClassName: "k-sparkline k-widget" }), children));
    };
    return Sparkline;
}(React.Component));
exports.Sparkline = Sparkline;
//# sourceMappingURL=Sparkline.js.map