"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)
            t[p[i]] = s[p[i]];
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var BaseChart_1 = require("./BaseChart");
var kendo_charts_1 = require("@progress/kendo-charts");
var NAVIGATOR_DEFAULTS = {
    autoBindElements: true,
    liveDrag: false,
    partialRedraw: true
};
/**
 * The root StockChart component.
 *
 * @example
 * {% embed_file stock-chart/default/main.jsx %}
 * {% embed_file stock-chart/stock-data.json %}
 */
var StockChart = /** @class */ (function (_super) {
    __extends(StockChart, _super);
    function StockChart() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        /**
         * @hidden
         */
        _this.deriveOptionsFromParent = function (options) {
            var navigator = Object.assign({}, (options.navigator || {}), NAVIGATOR_DEFAULTS);
            return Object.assign({}, options, { navigator: navigator });
        };
        /**
         * @hidden
         */
        _this.onRefresh = function (chartOptions, themeOptions, chartInstance) {
            if (_this.props.partialRedraw) {
                chartInstance.applyOptions(chartOptions);
                chartInstance.bindCategories();
                chartInstance.navigator.redrawSlaves();
            }
            else {
                chartInstance.setOptions(chartOptions, themeOptions);
            }
        };
        _this.getTarget = function () {
            return _this;
        };
        return _this;
    }
    Object.defineProperty(StockChart.prototype, "chartInstance", {
        /**
         * @hidden
         */
        get: function () {
            if (this._baseChart !== null) {
                return this._baseChart.chartInstance;
            }
            return null;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(StockChart.prototype, "surface", {
        /**
         * The Drawing `Surface` of the StockChart.
         */
        get: function () {
            if (this._baseChart !== null) {
                return this._baseChart.surface;
            }
            return null;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(StockChart.prototype, "element", {
        /**
         * The DOM element of the StockChart.
         */
        get: function () {
            if (this._baseChart !== null) {
                return this._baseChart.element;
            }
            return null;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @hidden
     */
    StockChart.prototype.render = function () {
        var _this = this;
        var _a = this.props, children = _a.children, baseChartProps = __rest(_a, ["children"]);
        return (React.createElement(BaseChart_1.BaseChart, __assign({}, baseChartProps, { ref: function (baseChart) { return _this._baseChart = baseChart; }, chartConstructor: kendo_charts_1.StockChart, getTarget: this.getTarget, wrapper: "div", deriveOptionsFromParent: this.deriveOptionsFromParent, onRefresh: this.onRefresh, wrapperClassName: "k-stockchart k-widget" }), children));
    };
    return StockChart;
}(React.Component));
exports.StockChart = StockChart;
//# sourceMappingURL=StockChart.js.map