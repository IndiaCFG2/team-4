/**
 * Returns the axis with the specified name.
 *
 * @param {Chart} chartComponent - The instance of the KendoReact Chart component.
 * @param {string} name - The axis name.
 * @returns {ChartAxis} - The axis with a corresponding name.
 */
var findAxisByName = function (chartComponent, name) {
    if (chartComponent && chartComponent.chartInstance !== null) {
        return chartComponent.chartInstance.findAxisByName(name);
    }
};
/**
 * Returns the pane at the specified index.
 *
 * @param {Chart} chartComponent - The instance of the KendoReact Chart component.
 * @param {number} index - The pane index.
 * @returns {ChartPane} - The pane at the specified index.
 */
var findPaneByIndex = function (chartComponent, index) {
    if (chartComponent && chartComponent.chartInstance !== null) {
        return chartComponent.chartInstance.findPaneByIndex(index);
    }
};
/**
 * Returns the pane with the specified name.
 *
 * @param {Chart} chartComponent - The instance of the KendoReact Chart component.
 * @param {string} name - The name of the pane.
 * @returns {ChartPane} - The pane with the provided name.
 */
var findPaneByName = function (chartComponent, name) {
    if (chartComponent && chartComponent.chartInstance !== null) {
        return chartComponent.chartInstance.findPaneByName(name);
    }
};
/**
 * Exports a Chart component as a Drawing `Scene`.
 *
 * @param {Chart} chartComponent - The instance of the KendoReact Chart component.
 * @param {any} options - The parameters for the export operation.
 * @returns {Group} - The root Group of the scene.
 */
var exportVisual = function (chartComponent, options) {
    if (options === void 0) { options = {}; }
    if (chartComponent && chartComponent.chartInstance !== null) {
        return chartComponent.chartInstance.exportVisual(options);
    }
};
export { findAxisByName, findPaneByIndex, findPaneByName, exportVisual };
//# sourceMappingURL=index.js.map