/**
 * @hidden
 */
function hasParent(element, parent) {
    var current = element;
    while (current && current !== parent) {
        current = current.parentNode;
    }
    return current ? true : false;
}
/**
 * @hidden
 */
function validateChildren(props, propName, componentName, childType) {
    var prop = props[propName];
    if (prop) {
        if (Array.isArray(prop)) {
            for (var _i = 0, prop_1 = prop; _i < prop_1.length; _i++) {
                var value = prop_1[_i];
                if (!value.type || value.type !== childType) {
                    return new Error(componentName + " children should be Array of type " + childType.displayName + ".");
                }
            }
        }
    }
    return null;
}
/**
 * @hidden
 */
var toggle = function (flag) { return flag === undefined ? false : !flag; };
export { hasParent, validateChildren, toggle };
//# sourceMappingURL=main.js.map